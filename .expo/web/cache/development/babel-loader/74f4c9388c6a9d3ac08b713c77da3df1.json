{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Desktop\\\\doc\\\\react_native_app\\\\ERES_MOBILE_APP\\\\Components\\\\Task.js\";\nimport React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Avatar, Card, Title, Icon, Button } from 'react-native-paper';\nimport axios from \"react-native-axios\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Fontisto } from '@expo/vector-icons';\nimport { Zocial } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Redirect } from 'react-router-native';\nimport { TextInput } from \"react-native-gesture-handler\";\n\nfunction Task(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  useEffect(function () {\n    getloginData();\n    getAllTaskById();\n    getDaysByMonth(cmonth);\n  }, []);\n\n  var _React$useState = React.useState('0'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      btnName = _React$useState2[0],\n      setBtnName = _React$useState2[1];\n\n  var _React$useState3 = React.useState('0'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      btnColor = _React$useState4[0],\n      setBtnColor = _React$useState4[1];\n\n  var _React$useState5 = React.useState(['']),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      userData = _React$useState6[0],\n      setUserData = _React$useState6[1];\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      input = _React$useState8[0],\n      setInput = _React$useState8[1];\n\n  var _route$params = route.params,\n      id = _route$params.id,\n      name = _route$params.name;\n  var cday = new Date().getDay();\n  var cmonth = new Date().getMonth() + 1;\n  var ctime = new Date().toLocaleTimeString();\n  var cdate = new Date().toDateString();\n\n  var getloginData = function getloginData() {\n    return _regeneratorRuntime.async(function getloginData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = setUserData;\n            _context.t1 = JSON;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userData\"));\n\n          case 4:\n            _context.t2 = _context.sent;\n            _context.t3 = _context.t1.parse.call(_context.t1, _context.t2);\n            (0, _context.t0)(_context.t3);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var userid, username;\n  if (id) userid = id;\n  if (name != 0) username = name;\n  var months = [\" \", \"January\", \"February\", \" March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  var _React$useState9 = React.useState(0),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      inputText = _React$useState10[0],\n      _onChangeText = _React$useState10[1];\n\n  var _React$useState11 = React.useState(0),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      noEntry = _React$useState12[0],\n      setNoEntry = _React$useState12[1];\n\n  var janC = 0,\n      febC = 0,\n      marC = 0,\n      aprC = 0,\n      mayC = 0,\n      junC = 0,\n      julC = 0,\n      augC = 0,\n      sepC = 0,\n      octC = 0,\n      novC = 0,\n      decC = 0;\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      itsMe = _React$useState14[0],\n      setItsMe = _React$useState14[1];\n\n  var _React$useState15 = React.useState([]),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      Days = _React$useState16[0],\n      setDays = _React$useState16[1];\n\n  var _React$useState17 = React.useState(cmonth),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      monthNo = _React$useState18[0],\n      setMonthNo = _React$useState18[1];\n\n  var _React$useState19 = React.useState(false),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      confirmdel = _React$useState20[0],\n      setConfirmdel = _React$useState20[1];\n\n  var _React$useState21 = React.useState(),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      invalidId = _React$useState22[0],\n      setInvalidId = _React$useState22[1];\n\n  var _React$useState23 = React.useState(true),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      isLoader = _React$useState24[0],\n      setLoader = _React$useState24[1];\n\n  var _React$useState25 = React.useState(true),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      isLoader2 = _React$useState26[0],\n      setLoader2 = _React$useState26[1];\n\n  var _React$useState27 = React.useState(false),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      datanotfound = _React$useState28[0],\n      setDNF = _React$useState28[1];\n\n  var _React$useState29 = React.useState(false),\n      _React$useState30 = _slicedToArray(_React$useState29, 2),\n      datanotfound2 = _React$useState30[0],\n      setDNF2 = _React$useState30[1];\n\n  var _React$useState31 = React.useState([]),\n      _React$useState32 = _slicedToArray(_React$useState31, 2),\n      attendance = _React$useState32[0],\n      setAttendance = _React$useState32[1];\n\n  var _React$useState33 = React.useState([]),\n      _React$useState34 = _slicedToArray(_React$useState33, 2),\n      duplicate = _React$useState34[0],\n      setDuplicate = _React$useState34[1];\n\n  var _React$useState35 = React.useState(cmonth),\n      _React$useState36 = _slicedToArray(_React$useState35, 2),\n      month = _React$useState36[0],\n      setMonth = _React$useState36[1];\n\n  var _React$useState37 = React.useState(),\n      _React$useState38 = _slicedToArray(_React$useState37, 2),\n      count = _React$useState38[0],\n      setcount = _React$useState38[1];\n\n  var _React$useState39 = React.useState(),\n      _React$useState40 = _slicedToArray(_React$useState39, 2),\n      Djan = _React$useState40[0],\n      setDjan = _React$useState40[1];\n\n  var _React$useState41 = React.useState(),\n      _React$useState42 = _slicedToArray(_React$useState41, 2),\n      Dfeb = _React$useState42[0],\n      setDfeb = _React$useState42[1];\n\n  var _React$useState43 = React.useState(),\n      _React$useState44 = _slicedToArray(_React$useState43, 2),\n      Dmar = _React$useState44[0],\n      setDmar = _React$useState44[1];\n\n  var _React$useState45 = React.useState(),\n      _React$useState46 = _slicedToArray(_React$useState45, 2),\n      Dapr = _React$useState46[0],\n      setDapr = _React$useState46[1];\n\n  var _React$useState47 = React.useState(),\n      _React$useState48 = _slicedToArray(_React$useState47, 2),\n      Dmay = _React$useState48[0],\n      setDmay = _React$useState48[1];\n\n  var _React$useState49 = React.useState(),\n      _React$useState50 = _slicedToArray(_React$useState49, 2),\n      Djun = _React$useState50[0],\n      setDjun = _React$useState50[1];\n\n  var _React$useState51 = React.useState(),\n      _React$useState52 = _slicedToArray(_React$useState51, 2),\n      Djul = _React$useState52[0],\n      setDjul = _React$useState52[1];\n\n  var _React$useState53 = React.useState(),\n      _React$useState54 = _slicedToArray(_React$useState53, 2),\n      Daug = _React$useState54[0],\n      setDaug = _React$useState54[1];\n\n  var _React$useState55 = React.useState(),\n      _React$useState56 = _slicedToArray(_React$useState55, 2),\n      Dsep = _React$useState56[0],\n      setDsep = _React$useState56[1];\n\n  var _React$useState57 = React.useState(),\n      _React$useState58 = _slicedToArray(_React$useState57, 2),\n      Doct = _React$useState58[0],\n      setDoct = _React$useState58[1];\n\n  var _React$useState59 = React.useState(),\n      _React$useState60 = _slicedToArray(_React$useState59, 2),\n      Dnov = _React$useState60[0],\n      setDnov = _React$useState60[1];\n\n  var _React$useState61 = React.useState(),\n      _React$useState62 = _slicedToArray(_React$useState61, 2),\n      Ddec = _React$useState62[0],\n      setDdec = _React$useState62[1];\n\n  var RedirectTo = function RedirectTo() {};\n\n  var ADDTASK = function ADDTASK() {\n    if (inputText == 0) ToastAndroid.show(\"Please type your task first !\", ToastAndroid.SHORT);else {\n      var TodoData = {\n        userid: userData[0].id,\n        task: inputText,\n        day: cday,\n        month: cmonth,\n        year: '2021',\n        edate: cdate,\n        etime: ctime,\n        status: '0'\n      };\n      axios.post(\"http://192.168.0.103:9000/api/v1/e-res/createTask\", TodoData).then(function (response) {\n        if (response.data == 400) {\n          ToastAndroid.show(\"Something went wrong please try later !\", ToastAndroid.SHORT);\n        } else {\n          var data = response.data;\n          ToastAndroid.show(\"Task added successfully !\", ToastAndroid.SHORT);\n          getAllTaskById();\n          getDaysByMonth(cmonth);\n\n          _onChangeText(\" \");\n        }\n      }).catch(function (error) {\n        alert(error);\n        console.log(error);\n      });\n    }\n  };\n\n  var getAllTaskById = function getAllTaskById() {\n    setDNF(false);\n    axios.get(\"http://192.168.0.103:9000/api/v1/e-res/taskById/\" + userid).then(function (response) {\n      var tdays = response.data;\n\n      if (tdays.success == 404) {\n        setDNF(true);\n        setLoader(false);\n      } else {\n        setLoader(false);\n        tdays.map(function (data1, index) {\n          return data1.month == 1 ? janC++ : \"\";\n        });\n        setDjan(janC);\n        tdays.map(function (data2, index) {\n          return data2.month == 2 ? febC++ : \"\";\n        });\n        setDfeb(febC);\n        tdays.map(function (data2, index) {\n          return data2.month == 3 ? marC++ : \"\";\n        });\n        setDmar(marC);\n        tdays.map(function (data2, index) {\n          return data2.month == 4 ? aprC++ : \"\";\n        });\n        setDapr(aprC);\n        tdays.map(function (data2, index) {\n          return data2.month == 5 ? mayC++ : \"\";\n        });\n        setDmay(mayC);\n        tdays.map(function (data2, index) {\n          return data2.month == 6 ? junC++ : \"\";\n        });\n        setDjun(junC);\n        tdays.map(function (data2, index) {\n          return data2.month == 7 ? julC++ : \"\";\n        });\n        setDjul(julC);\n        tdays.map(function (data2, index) {\n          return data2.month == 8 ? augC++ : \"\";\n        });\n        setDaug(augC);\n        tdays.map(function (data2, index) {\n          return data2.month == 9 ? sepC++ : \"\";\n        });\n        setDsep(sepC);\n        tdays.map(function (data2, index) {\n          return data2.month == 10 ? octC++ : \"\";\n        });\n        setDoct(octC);\n        tdays.map(function (data2, index) {\n          return data2.month == 11 ? novC++ : \"\";\n        });\n        setDnov(novC);\n        tdays.map(function (data2, index) {\n          return data2.month == 12 ? decC++ : \"\";\n        });\n        setDdec(decC);\n      }\n    }).catch(function (error) {\n      console.log(error);\n      setLoader(false);\n    });\n  };\n\n  var getDaysByMonth = function getDaysByMonth(month) {\n    setMonthNo(month);\n    setLoader2(true);\n    var dataobj = {\n      userid: userid,\n      month: month\n    };\n    axios.post(\"http://192.168.0.103:9000/api/v1/e-res/getDuplicateDayById\", dataobj).then(function (response) {\n      if (response.data.status == 404) {\n        setDNF2(true);\n        setLoader2(false);\n      } else {\n        var days = response.data;\n        setAttendance(days);\n        setLoader2(false);\n        setDNF2(false);\n      }\n    }).catch(function (error) {\n      alert(error);\n      console.log(error);\n      setLoader2(false);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.fadingText,\n    source: require(\"../assets/Images/officeLogo.png\"),\n    style: {\n      width: 40,\n      height: 40,\n      marginLeft: 9,\n      marginTop: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontWeight: 'bold',\n      marginLeft: 150,\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }\n  }, username)), React.createElement(ScrollView, {\n    style: styles.scrollview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 6\n    }\n  }, isLoader ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 10\n    }\n  }, React.createElement(ActivityIndicator, {\n    style: {\n      marginTop: 240\n    },\n    size: \"large\",\n    color: \"lightseagreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginLeft: 145,\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 17\n    }\n  }, \"Please wait...\")) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 9\n    }\n  }, datanotfound ? React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      marginTop: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 12\n    }\n  }, React.createElement(Fontisto, {\n    name: \"folder\",\n    size: 35,\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 12\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: 'grey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 12\n    }\n  }, \"EMPTY TASK SHEET \")) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 12\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 17\n    }\n  }, React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 23\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 29\n    }\n  }, \"JANUARY  [ \", Djan, \" ]\")), React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 23\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 27\n    }\n  }, \"FEBRUARY  [ \", Dfeb, \" ]\")), React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 23\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 27\n    }\n  }, \"MARCH  [ \", Dmar, \" ]\"))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 17\n    }\n  }, React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(4);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 23\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 29\n    }\n  }, \"APRIL  [ \", Dapr, \" ]\")), React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(5);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 23\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 27\n    }\n  }, \"MAY  [ \", Dmay, \" ]\")), React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(6);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 23\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 27\n    }\n  }, \"JUNE  [ \", Djun, \" ]\"))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 17\n    }\n  }, React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(7);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 31\n    }\n  }, \"JULY  [ \", Djul, \" ]\")), React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(8);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 29\n    }\n  }, \"AUGUST  [ \", Daug, \" ]\")), React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(9);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 29\n    }\n  }, \"SEPTEMBER  [ \", Dsep, \" ]\"))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 19\n    }\n  }, React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(10);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 27\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 33\n    }\n  }, \"OCTOBER  [ \", Doct, \" ]\")), React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(11);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 27\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 31\n    }\n  }, \"NOVENBER  [  \", Dnov, \" ]\")), React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      getDaysByMonth(12);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 27\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 31\n    }\n  }, \"DECEMBER  [ \", Ddec, \" ]\"))), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 18,\n      marginTop: 8,\n      fontWeight: 'bold',\n      paddingLeft: 60,\n      backgroundColor: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 17\n    }\n  }, \"TASK ADDED ON   : \", months[monthNo]), isLoader2 ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 10\n    }\n  }, React.createElement(ActivityIndicator, {\n    style: {\n      marginTop: 150\n    },\n    size: \"large\",\n    color: \"lightseagreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginLeft: 145,\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 15\n    }\n  }, \"Please wait...\")) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 11\n    }\n  }, datanotfound2 ? React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      marginTop: 140\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 12\n    }\n  }, React.createElement(Fontisto, {\n    name: \"folder\",\n    size: 35,\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 12\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: 'grey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 12\n    }\n  }, \"ZERO\")) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 14\n    }\n  }, attendance.map(function (data) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 20\n      }\n    }, React.createElement(Card, {\n      style: {\n        height: 35,\n        marginTop: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 23\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        marginLeft: 35,\n        paddingTop: 7,\n        color: 'black',\n        fontSize: 14\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 25\n      }\n    }, \" \", data.edate), React.createElement(Card, {\n      style: {\n        marginLeft: 150,\n        height: 35,\n        width: 35,\n        backgroundColor: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 25\n      }\n    }, React.createElement(Button, {\n      style: {\n        marginLeft: -12\n      },\n      onPress: function onPress() {\n        navigation.navigate('ViewTask', {\n          edate: data.edate,\n          userid: userid,\n          username: username\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 29\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"file-eye\",\n      size: 24,\n      color: \"lightseagreen\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 32\n      }\n    }))))));\n  })))))), userid == userData[0].id ? React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      height: 50,\n      backgroundColor: 'white',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      paddingLeft: 15,\n      width: 315,\n      height: 50\n    },\n    placeholder: \"add your task here...\",\n    value: inputText,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    style: {\n      marginLeft: -15\n    },\n    onPress: function onPress() {\n      ADDTASK();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 8\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"add-circle\",\n    size: 40,\n    color: \"lightseagreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 9\n    }\n  }))) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 6\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\"\n  },\n  scrollview: {\n    backgroundColor: '#EBEEEE',\n    marginTop: 15\n  },\n  card: {\n    backgroundColor: 'white',\n    height: 30,\n    fontSize: 14,\n    marginTop: 3,\n    width: 115,\n    marginLeft: 3.6\n  },\n  text: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: 'black',\n    marginLeft: 10,\n    marginTop: 7\n  }\n});\nexport default Task;","map":{"version":3,"sources":["E:/Desktop/doc/react_native_app/ERES_MOBILE_APP/Components/Task.js"],"names":["React","useEffect","NavigationContainer","createBottomTabNavigator","Avatar","Card","Title","Icon","Button","axios","AsyncStorage","MaterialIcons","Fontisto","Zocial","FontAwesome5","Entypo","Ionicons","FontAwesome","AntDesign","MaterialCommunityIcons","Redirect","TextInput","Task","route","navigation","getloginData","getAllTaskById","getDaysByMonth","cmonth","useState","btnName","setBtnName","btnColor","setBtnColor","userData","setUserData","input","setInput","params","id","name","cday","Date","getDay","getMonth","ctime","toLocaleTimeString","cdate","toDateString","JSON","getItem","parse","userid","username","months","inputText","onChangeText","noEntry","setNoEntry","janC","febC","marC","aprC","mayC","junC","julC","augC","sepC","octC","novC","decC","itsMe","setItsMe","Days","setDays","monthNo","setMonthNo","confirmdel","setConfirmdel","invalidId","setInvalidId","isLoader","setLoader","isLoader2","setLoader2","datanotfound","setDNF","datanotfound2","setDNF2","attendance","setAttendance","duplicate","setDuplicate","month","setMonth","count","setcount","Djan","setDjan","Dfeb","setDfeb","Dmar","setDmar","Dapr","setDapr","Dmay","setDmay","Djun","setDjun","Djul","setDjul","Daug","setDaug","Dsep","setDsep","Doct","setDoct","Dnov","setDnov","Ddec","setDdec","RedirectTo","ADDTASK","ToastAndroid","show","SHORT","TodoData","task","day","year","edate","etime","status","post","then","response","data","catch","error","alert","console","log","get","tdays","success","map","data1","index","data2","dataobj","days","styles","container","flexDirection","fadingText","require","width","height","marginLeft","marginTop","color","fontWeight","scrollview","alignItems","fontSize","card","text","paddingLeft","backgroundColor","paddingTop","navigate","StyleSheet","create","flex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA4BC,IAA5B,EAAiCC,MAAjC,QAA8C,oBAA9C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAIC,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACD,SAASC,SAAT,QAA0B,8BAA1B;;AAEE,SAASC,IAAT,OAAkC;AAAA;;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAbC,UAAa,QAAbA,UAAa;AAGjCvB,EAAAA,SAAS,CAAC,YAAI;AAEdwB,IAAAA,YAAY;AACXC,IAAAA,cAAc;AACdC,IAAAA,cAAc,CAACC,MAAD,CAAd;AACD,GALS,EAKR,EALQ,CAAT;;AAHiC,wBAYJ5B,KAAK,CAAC6B,QAAN,CAAe,GAAf,CAZI;AAAA;AAAA,MAY5BC,OAZ4B;AAAA,MAYlBC,UAZkB;;AAAA,yBAaF/B,KAAK,CAAC6B,QAAN,CAAe,GAAf,CAbE;AAAA;AAAA,MAa5BG,QAb4B;AAAA,MAajBC,WAbiB;;AAAA,yBAcHjC,KAAK,CAAC6B,QAAN,CAAe,CAAC,EAAD,CAAf,CAdG;AAAA;AAAA,MAc5BK,QAd4B;AAAA,MAclBC,WAdkB;;AAAA,yBAeRnC,KAAK,CAAC6B,QAAN,EAfQ;AAAA;AAAA,MAe5BO,KAf4B;AAAA,MAepBC,QAfoB;;AAAA,sBAiBZd,KAAK,CAACe,MAjBM;AAAA,MAiB1BC,EAjB0B,iBAiB1BA,EAjB0B;AAAA,MAiBrBC,IAjBqB,iBAiBrBA,IAjBqB;AAkBlC,MAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,MAAX,EAAX;AACA,MAAIf,MAAM,GAAG,IAAIc,IAAJ,GAAWE,QAAX,KAAsB,CAAnC;AACA,MAAIC,KAAK,GAAI,IAAIH,IAAJ,GAAWI,kBAAX,EAAb;AACA,MAAIC,KAAK,GAAI,IAAIL,IAAJ,GAAWM,YAAX,EAAb;;AAGA,MAAMvB,YAAY,GAAE,SAAdA,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA,0BACnBU,WADmB;AAAA,0BACPc,IADO;AAAA;AAAA,6CACYvC,YAAY,CAACwC,OAAb,CAAqB,UAArB,CADZ;;AAAA;AAAA;AAAA,sCACFC,KADE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAKA,MAAIC,MAAJ,EAAWC,QAAX;AACA,MAAGd,EAAH,EAAOa,MAAM,GAAGb,EAAT;AACP,MAAGC,IAAI,IAAE,CAAT,EAAYa,QAAQ,GAAGb,IAAX;AAIZ,MAAMc,MAAM,GAAE,CAAC,GAAD,EAAK,SAAL,EAAgB,UAAhB,EAA6B,QAA7B,EAAuC,OAAvC,EAAiD,KAAjD,EAAwD,MAAxD,EAAgE,MAAhE,EAAuE,QAAvE,EAAgF,WAAhF,EACd,SADc,EACJ,UADI,EACQ,UADR,CAAd;;AAnCkC,yBAuCAtD,KAAK,CAAC6B,QAAN,CAAe,CAAf,CAvCA;AAAA;AAAA,MAuC3B0B,SAvC2B;AAAA,MAuChBC,aAvCgB;;AAAA,0BAyCJxD,KAAK,CAAC6B,QAAN,CAAe,CAAf,CAzCI;AAAA;AAAA,MAyC3B4B,OAzC2B;AAAA,MAyCjBC,UAzCiB;;AA2ClC,MAAIC,IAAI,GAAC,CAAT;AAAA,MAAYC,IAAI,GAAC,CAAjB;AAAA,MAAoBC,IAAI,GAAC,CAAzB;AAAA,MAA4BC,IAAI,GAAC,CAAjC;AAAA,MAAmCC,IAAI,GAAC,CAAxC;AAAA,MAA0CC,IAAI,GAAC,CAA/C;AAAA,MAAiDC,IAAI,GAAC,CAAtD;AAAA,MAAwDC,IAAI,GAAC,CAA7D;AAAA,MAA+DC,IAAI,GAAC,CAApE;AAAA,MAAsEC,IAAI,GAAC,CAA3E;AAAA,MAA6EC,IAAI,GAAC,CAAlF;AAAA,MAAoFC,IAAI,GAAC,CAAzF;;AA3CkC,0BA4CNtE,KAAK,CAAC6B,QAAN,CAAe,KAAf,CA5CM;AAAA;AAAA,MA4C1B0C,KA5C0B;AAAA,MA4ClBC,QA5CkB;;AAAA,0BA6CRxE,KAAK,CAAC6B,QAAN,CAAe,EAAf,CA7CQ;AAAA;AAAA,MA6C1B4C,IA7C0B;AAAA,MA6CnBC,OA7CmB;;AAAA,0BA8CH1E,KAAK,CAAC6B,QAAN,CAAeD,MAAf,CA9CG;AAAA;AAAA,MA8C1B+C,OA9C0B;AAAA,MA8CjBC,UA9CiB;;AAAA,0BA+CI5E,KAAK,CAAC6B,QAAN,CAAe,KAAf,CA/CJ;AAAA;AAAA,MA+C1BgD,UA/C0B;AAAA,MA+CbC,aA/Ca;;AAAA,0BAgDI9E,KAAK,CAAC6B,QAAN,EAhDJ;AAAA;AAAA,MAgD1BkD,SAhD0B;AAAA,MAgDhBC,YAhDgB;;AAAA,0BAiDIhF,KAAK,CAAC6B,QAAN,CAAe,IAAf,CAjDJ;AAAA;AAAA,MAiD1BoD,QAjD0B;AAAA,MAiDjBC,SAjDiB;;AAAA,0BAkDMlF,KAAK,CAAC6B,QAAN,CAAe,IAAf,CAlDN;AAAA;AAAA,MAkD1BsD,SAlD0B;AAAA,MAkDhBC,UAlDgB;;AAAA,0BAmDIpF,KAAK,CAAC6B,QAAN,CAAe,KAAf,CAnDJ;AAAA;AAAA,MAmD1BwD,YAnD0B;AAAA,MAmDXC,MAnDW;;AAAA,0BAoDMtF,KAAK,CAAC6B,QAAN,CAAe,KAAf,CApDN;AAAA;AAAA,MAoD1B0D,aApD0B;AAAA,MAoDVC,OApDU;;AAAA,0BAqDIxF,KAAK,CAAC6B,QAAN,CAAe,EAAf,CArDJ;AAAA;AAAA,MAqD1B4D,UArD0B;AAAA,MAqDbC,aArDa;;AAAA,0BAsDI1F,KAAK,CAAC6B,QAAN,CAAe,EAAf,CAtDJ;AAAA;AAAA,MAsD1B8D,SAtD0B;AAAA,MAsDdC,YAtDc;;AAAA,0BAuDN5F,KAAK,CAAC6B,QAAN,CAAeD,MAAf,CAvDM;AAAA;AAAA,MAuD1BiE,KAvD0B;AAAA,MAuDlBC,QAvDkB;;AAAA,0BAwDN9F,KAAK,CAAC6B,QAAN,EAxDM;AAAA;AAAA,MAwD1BkE,KAxD0B;AAAA,MAwDlBC,QAxDkB;;AAAA,0BAyDNhG,KAAK,CAAC6B,QAAN,EAzDM;AAAA;AAAA,MAyD1BoE,IAzD0B;AAAA,MAyDnBC,OAzDmB;;AAAA,0BA0DNlG,KAAK,CAAC6B,QAAN,EA1DM;AAAA;AAAA,MA0D1BsE,IA1D0B;AAAA,MA0DnBC,OA1DmB;;AAAA,0BA2DNpG,KAAK,CAAC6B,QAAN,EA3DM;AAAA;AAAA,MA2D1BwE,IA3D0B;AAAA,MA2DnBC,OA3DmB;;AAAA,0BA4DNtG,KAAK,CAAC6B,QAAN,EA5DM;AAAA;AAAA,MA4D1B0E,IA5D0B;AAAA,MA4DnBC,OA5DmB;;AAAA,0BA6DNxG,KAAK,CAAC6B,QAAN,EA7DM;AAAA;AAAA,MA6D1B4E,IA7D0B;AAAA,MA6DnBC,OA7DmB;;AAAA,0BA8DN1G,KAAK,CAAC6B,QAAN,EA9DM;AAAA;AAAA,MA8D1B8E,IA9D0B;AAAA,MA8DnBC,OA9DmB;;AAAA,0BA+DN5G,KAAK,CAAC6B,QAAN,EA/DM;AAAA;AAAA,MA+D1BgF,IA/D0B;AAAA,MA+DnBC,OA/DmB;;AAAA,0BAgEN9G,KAAK,CAAC6B,QAAN,EAhEM;AAAA;AAAA,MAgE1BkF,IAhE0B;AAAA,MAgEnBC,OAhEmB;;AAAA,0BAiENhH,KAAK,CAAC6B,QAAN,EAjEM;AAAA;AAAA,MAiE1BoF,IAjE0B;AAAA,MAiEnBC,OAjEmB;;AAAA,0BAkENlH,KAAK,CAAC6B,QAAN,EAlEM;AAAA;AAAA,MAkE1BsF,IAlE0B;AAAA,MAkEnBC,OAlEmB;;AAAA,0BAmENpH,KAAK,CAAC6B,QAAN,EAnEM;AAAA;AAAA,MAmE1BwF,IAnE0B;AAAA,MAmEnBC,OAnEmB;;AAAA,0BAoENtH,KAAK,CAAC6B,QAAN,EApEM;AAAA;AAAA,MAoE1B0F,IApE0B;AAAA,MAoEnBC,OApEmB;;AAqElC,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAI,CAEtB,CAFD;;AAKA,MAAMC,OAAO,GAAC,SAARA,OAAQ,GAAI;AAChB,QAAGnE,SAAS,IAAI,CAAhB,EACEoE,YAAY,CAACC,IAAb,kCAAmDD,YAAY,CAACE,KAAhE,EADF,KAEI;AACF,UAAIC,QAAQ,GACZ;AACK1E,QAAAA,MAAM,EAAMlB,QAAQ,CAAC,CAAD,CAAR,CAAYK,EAD7B;AAEKwF,QAAAA,IAAI,EAAQxE,SAFjB;AAGKyE,QAAAA,GAAG,EAASvF,IAHjB;AAIKoD,QAAAA,KAAK,EAAOjE,MAJjB;AAKKqG,QAAAA,IAAI,EAAQ,MALjB;AAMKC,QAAAA,KAAK,EAAOnF,KANjB;AAOKoF,QAAAA,KAAK,EAAOtF,KAPjB;AAQKuF,QAAAA,MAAM,EAAM;AARjB,OADA;AAWK3H,MAAAA,KAAK,CAAC4H,IAAN,CAAW,mDAAX,EAA+DP,QAA/D,EAAyEQ,IAAzE,CACK,UAACC,QAAD,EAAY;AACR,YAAGA,QAAQ,CAACC,IAAT,IAAiB,GAApB,EAAwB;AAClBb,UAAAA,YAAY,CAACC,IAAb,4CAA6DD,YAAY,CAACE,KAA1E;AACL,SAFD,MAGI;AACA,cAAIW,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACDb,UAAAA,YAAY,CAACC,IAAb,8BAA+CD,YAAY,CAACE,KAA5D;AACAnG,UAAAA,cAAc;AACdC,UAAAA,cAAc,CAACC,MAAD,CAAd;;AACA4B,UAAAA,aAAY,CAAC,GAAD,CAAZ;AAGF;AACJ,OAdN,EAeSiF,KAfT,CAee,UAACC,KAAD,EAAS;AACfC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,OAlBN;AAoBN;AACF,GApCD;;AA+FF,MAAMhH,cAAc,GAAE,SAAhBA,cAAgB,GAAI;AACxB4D,IAAAA,MAAM,CAAC,KAAD,CAAN;AACA7E,IAAAA,KAAK,CAACqI,GAAN,sDAA6D1F,MAA7D,EAAuEkF,IAAvE,CACG,UAACC,QAAD,EAAY;AAET,UAAKQ,KAAK,GAAGR,QAAQ,CAACC,IAAtB;;AACF,UAAGO,KAAK,CAACC,OAAN,IAAiB,GAApB,EACA;AACI1D,QAAAA,MAAM,CAAC,IAAD,CAAN;AACAJ,QAAAA,SAAS,CAAC,KAAD,CAAT;AACH,OAJD,MAKI;AACFA,QAAAA,SAAS,CAAC,KAAD,CAAT;AACA6D,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACC,KAAD,EAASC,KAAT;AAAA,iBACRD,KAAK,CAACrD,KAAN,IAAc,CAAf,GAAkBlC,IAAI,EAAtB,GAAyB,EADhB;AAAA,SAAV;AAECuC,QAAAA,OAAO,CAACvC,IAAD,CAAP;AAEAoF,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACG,KAAD,EAASD,KAAT;AAAA,iBACTC,KAAK,CAACvD,KAAN,IAAc,CAAf,GAAkBjC,IAAI,EAAtB,GAAyB,EADf;AAAA,SAAV;AAEAwC,QAAAA,OAAO,CAACxC,IAAD,CAAP;AAEAmF,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACG,KAAD,EAASD,KAAT;AAAA,iBACTC,KAAK,CAACvD,KAAN,IAAc,CAAf,GAAkBhC,IAAI,EAAtB,GAAyB,EADf;AAAA,SAAV;AAEAyC,QAAAA,OAAO,CAACzC,IAAD,CAAP;AAEAkF,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACG,KAAD,EAASD,KAAT;AAAA,iBACTC,KAAK,CAACvD,KAAN,IAAc,CAAf,GAAkB/B,IAAI,EAAtB,GAAyB,EADf;AAAA,SAAV;AAEA0C,QAAAA,OAAO,CAAC1C,IAAD,CAAP;AAEAiF,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACG,KAAD,EAASD,KAAT;AAAA,iBACTC,KAAK,CAACvD,KAAN,IAAc,CAAf,GAAkB9B,IAAI,EAAtB,GAAyB,EADf;AAAA,SAAV;AAEA2C,QAAAA,OAAO,CAAC3C,IAAD,CAAP;AAEAgF,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACG,KAAD,EAASD,KAAT;AAAA,iBACTC,KAAK,CAACvD,KAAN,IAAc,CAAf,GAAkB7B,IAAI,EAAtB,GAAyB,EADf;AAAA,SAAV;AAEA4C,QAAAA,OAAO,CAAC5C,IAAD,CAAP;AAEA+E,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACG,KAAD,EAASD,KAAT;AAAA,iBACTC,KAAK,CAACvD,KAAN,IAAc,CAAf,GAAkB5B,IAAI,EAAtB,GAAyB,EADf;AAAA,SAAV;AAEA6C,QAAAA,OAAO,CAAC7C,IAAD,CAAP;AAEA8E,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACG,KAAD,EAASD,KAAT;AAAA,iBACTC,KAAK,CAACvD,KAAN,IAAc,CAAf,GAAkB3B,IAAI,EAAtB,GAAyB,EADf;AAAA,SAAV;AAEA8C,QAAAA,OAAO,CAAC9C,IAAD,CAAP;AAEA6E,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACG,KAAD,EAASD,KAAT;AAAA,iBACTC,KAAK,CAACvD,KAAN,IAAc,CAAf,GAAkB1B,IAAI,EAAtB,GAAyB,EADf;AAAA,SAAV;AAEA+C,QAAAA,OAAO,CAAC/C,IAAD,CAAP;AAEA4E,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACG,KAAD,EAASD,KAAT;AAAA,iBACTC,KAAK,CAACvD,KAAN,IAAc,EAAf,GAAmBzB,IAAI,EAAvB,GAA0B,EADhB;AAAA,SAAV;AAEAgD,QAAAA,OAAO,CAAChD,IAAD,CAAP;AAEA2E,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACG,KAAD,EAASD,KAAT;AAAA,iBACTC,KAAK,CAACvD,KAAN,IAAc,EAAf,GAAmBxB,IAAI,EAAvB,GAA0B,EADhB;AAAA,SAAV;AAEAiD,QAAAA,OAAO,CAACjD,IAAD,CAAP;AAEA0E,QAAAA,KAAK,CAACE,GAAN,CAAU,UAACG,KAAD,EAASD,KAAT;AAAA,iBACTC,KAAK,CAACvD,KAAN,IAAc,EAAf,GAAmBvB,IAAI,EAAvB,GAA0B,EADhB;AAAA,SAAV;AAEAkD,QAAAA,OAAO,CAAClD,IAAD,CAAP;AACC;AACA,KA3DR,EA4DQmE,KA5DR,CA4Dc,UAACC,KAAD,EAAS;AAEfE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACDxD,MAAAA,SAAS,CAAC,KAAD,CAAT;AACC,KAhER;AAkED,GApED;;AAqIE,MAAMvD,cAAc,GAAG,SAAjBA,cAAiB,CAACkE,KAAD,EAAS;AAC9BjB,IAAAA,UAAU,CAACiB,KAAD,CAAV;AACAT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIiE,OAAO,GACX;AACIjG,MAAAA,MAAM,EAAMA,MADhB;AAEIyC,MAAAA,KAAK,EAAOA;AAFhB,KADA;AAKApF,IAAAA,KAAK,CAAC4H,IAAN,CAAW,4DAAX,EAAwEgB,OAAxE,EAAiFf,IAAjF,CACA,UAACC,QAAD,EAAY;AACV,UAAGA,QAAQ,CAACC,IAAT,CAAcJ,MAAd,IAAwB,GAA3B,EACA;AACG5C,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACF,OAJD,MAKI;AACF,YAAKkE,IAAI,GAAGf,QAAQ,CAACC,IAArB;AACA9C,QAAAA,aAAa,CAAC4D,IAAD,CAAb;AACAlE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KAbD,EAcAiD,KAdA,CAcM,UAACC,KAAD,EAAS;AACVC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAtD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACJ,KAlBD;AAmBD,GA3BD;;AAuGA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAC;AAAf,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,MAAM,CAACG,UAArB;AAAiC,IAAA,MAAM,EAAIC,OAAO,mCAAlD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAC,EAAR;AAAYC,MAAAA,MAAM,EAAC,EAAnB;AAAwBC,MAAAA,UAAU,EAAC,CAAnC;AAAqCC,MAAAA,SAAS,EAAC;AAA/C,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,OAAP;AAAeC,MAAAA,UAAU,EAAC,MAA1B;AAAiCH,MAAAA,UAAU,EAAC,GAA5C;AAAgDC,MAAAA,SAAS,EAAC;AAA1D,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6E1G,QAA7E,CAJF,CAFA,EAWC,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEkG,MAAM,CAACW,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEjF,QAAD,GACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACO,oBAAC,iBAAD;AAAoB,IAAA,KAAK,EAAE;AAAC8E,MAAAA,SAAS,EAAC;AAAX,KAA3B;AAA4C,IAAA,IAAI,EAAC,OAAjD;AAAyD,IAAA,KAAK,EAAC,eAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,EAEO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACD,MAAAA,UAAU,EAAC,GAAZ;AAAgBC,MAAAA,SAAS,EAAC;AAA1B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFP,CADH,GAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1E,YAAD,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC8E,MAAAA,UAAU,EAAC,QAAZ;AAAqBJ,MAAAA,SAAS,EAAC;AAA/B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,QAAf;AAAwB,IAAA,IAAI,EAAE,EAA9B;AAAkC,IAAA,KAAK,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACK,MAAAA,QAAQ,EAAC,EAAV;AAAaH,MAAAA,UAAU,EAAC,MAAxB;AAA+BD,MAAAA,KAAK,EAAC;AAArC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFA,CADD,GAMC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACP,MAAAA,aAAa,EAAC,KAAf;AAAqBM,MAAAA,SAAS,EAAC;AAA/B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACc,IAApB;AAA0B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,CAAD,CAAd;AAAkB,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcrE,IADd,OADN,CADN,EAOM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEsD,MAAM,CAACc,IAApB;AAA2B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,CAAD,CAAd;AAAkB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBnE,IADjB,OADJ,CAPN,EAYM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoD,MAAM,CAACc,IAApB;AAA2B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,CAAD,CAAd;AAAkB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACcjE,IADd,OADJ,CAZN,CADL,EAoBK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACoD,MAAAA,aAAa,EAAC,KAAf;AAAqBM,MAAAA,SAAS,EAAC;AAA/B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACc,IAApB;AAA0B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,CAAD,CAAd;AAAkB,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACY/D,IADZ,OADN,CADN,EAOM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgD,MAAM,CAACc,IAApB;AAA2B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,CAAD,CAAd;AAAkB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACY7D,IADZ,OADJ,CAPN,EAYM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE8C,MAAM,CAACc,IAApB;AAA2B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,CAAD,CAAd;AAAkB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACa3D,IADb,OADJ,CAZN,CApBL,EAsCK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC8C,MAAAA,aAAa,EAAC,KAAf;AAAqBM,MAAAA,SAAS,EAAC;AAA/B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACc,IAApB;AAA0B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,CAAD,CAAd;AAAkB,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWzD,IADX,OADN,CADR,EAOQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0C,MAAM,CAACc,IAApB;AAA2B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,CAAD,CAAd;AAAkB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACevD,IADf,OADJ,CAPR,EAYQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwC,MAAM,CAACc,IAApB;AAA2B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,CAAD,CAAd;AAAkB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACkBrD,IADlB,OADJ,CAZR,CAtCL,EAwDO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACwC,MAAAA,aAAa,EAAC,KAAf;AAAqBM,MAAAA,SAAS,EAAC;AAA/B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACc,IAApB;AAA0B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,EAAD,CAAd;AAAmB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcnD,IADd,OADN,CAFR,EAQQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoC,MAAM,CAACc,IAApB;AAA2B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,EAAD,CAAd;AAAmB,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACkBjD,IADlB,OADJ,CARR,EAaQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkC,MAAM,CAACc,IAApB;AAA2B,IAAA,OAAO,EAAE,mBAAI;AAAC1I,MAAAA,cAAc,CAAC,EAAD,CAAd;AAAmB,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4H,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiB/C,IADjB,OADJ,CAbR,CAxDP,EA2EK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACyC,MAAAA,KAAK,EAAC,OAAP;AAAeI,MAAAA,QAAQ,EAAC,EAAxB;AAA2BL,MAAAA,SAAS,EAAC,CAArC;AAAuCE,MAAAA,UAAU,EAAC,MAAlD;AAAyDM,MAAAA,WAAW,EAAC,EAArE;AAAwEC,MAAAA,eAAe,EAAC;AAAxF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACuBlH,MAAM,CAACqB,OAAD,CAD7B,CA3EL,EAgFHQ,SAAD,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,iBAAD;AAAoB,IAAA,KAAK,EAAE;AAAC4E,MAAAA,SAAS,EAAC;AAAX,KAA3B;AAA4C,IAAA,IAAI,EAAC,OAAjD;AAAyD,IAAA,KAAK,EAAC,eAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,EAEK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACD,MAAAA,UAAU,EAAC,GAAZ;AAAgBC,MAAAA,SAAS,EAAC;AAA1B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFL,CADF,GAKG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxE,aAAD,GACD,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC4E,MAAAA,UAAU,EAAC,QAAZ;AAAqBJ,MAAAA,SAAS,EAAC;AAA/B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,QAAf;AAAwB,IAAA,IAAI,EAAE,EAA9B;AAAkC,IAAA,KAAK,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACK,MAAAA,QAAQ,EAAC,EAAV;AAAaH,MAAAA,UAAU,EAAC,MAAxB;AAA+BD,MAAAA,KAAK,EAAC;AAArC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,CADC,GAKC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGMvE,UAAU,CAACwD,GAAX,CAAe,UAACT,IAAD;AAAA,WACf,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACqB,QAAAA,MAAM,EAAC,EAAR;AAAWE,QAAAA,SAAS,EAAC;AAArB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAQ,MAAA,KAAK,EAAE;AAACN,QAAAA,aAAa,EAAC;AAAf,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAQ,MAAA,KAAK,EAAE;AAACK,QAAAA,UAAU,EAAC,EAAZ;AAAeW,QAAAA,UAAU,EAAC,CAA1B;AAA4BT,QAAAA,KAAK,EAAC,OAAlC;AAA0CI,QAAAA,QAAQ,EAAC;AAAnD,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAyE5B,IAAI,CAACN,KAA9E,CADA,EAEA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAC4B,QAAAA,UAAU,EAAC,GAAZ;AAAiBD,QAAAA,MAAM,EAAC,EAAxB;AAA2BD,QAAAA,KAAK,EAAC,EAAjC;AAAoCY,QAAAA,eAAe,EAAC;AAApD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACV,QAAAA,UAAU,EAAC,CAAC;AAAb,OAAf;AAAiC,MAAA,OAAO,EAAE,mBAAI;AAACtI,QAAAA,UAAU,CAACkJ,QAAX,CAAoB,UAApB,EAA+B;AAACxC,UAAAA,KAAK,EAACM,IAAI,CAACN,KAAZ;AAAmB9E,UAAAA,MAAM,EAACA,MAA1B;AAAkCC,UAAAA,QAAQ,EAACA;AAA3C,SAA/B;AAAqF,OAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,sBAAD;AAAwB,MAAA,IAAI,EAAC,UAA7B;AAAwC,MAAA,IAAI,EAAE,EAA9C;AAAkD,MAAA,KAAK,EAAC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADJ,CAFA,CADF,CADH,CADe;AAAA,GAAf,CAHN,CANH,CArFC,CAPH,CARH,CAXD,EA8IAD,MAAM,IAAIlB,QAAQ,CAAC,CAAD,CAAR,CAAYK,EAAvB,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACkH,MAAAA,aAAa,EAAC,KAAf;AAAqBI,MAAAA,MAAM,EAAC,EAA5B;AAA+BW,MAAAA,eAAe,EAAC,OAA/C;AAAuDL,MAAAA,UAAU,EAAC;AAAlE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACI,MAAAA,WAAW,EAAC,EAAb;AAAgBX,MAAAA,KAAK,EAAC,GAAtB;AAA2BC,MAAAA,MAAM,EAAC;AAAlC,KAAlB;AAAwD,IAAA,WAAW,EAAC,uBAApE;AAA4F,IAAA,KAAK,EAAEtG,SAAnG;AAA+G,IAAA,YAAY,EAAE,sBAAA+G,IAAI;AAAA,aAAI9G,aAAY,CAAC8G,IAAD,CAAhB;AAAA,KAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEG,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACR,MAAAA,UAAU,EAAC,CAAC;AAAb,KAAf;AAAkC,IAAA,OAAO,EAAE,mBAAI;AAACpC,MAAAA,OAAO;AAAG,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AAAgB,IAAA,IAAI,EAAC,YAArB;AAAkC,IAAA,IAAI,EAAE,EAAxC;AAA4C,IAAA,KAAK,EAAC,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADD,GAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArJD,CADF;AA0JD;;AAED,IAAM6B,MAAM,GAAGoB,UAAU,CAACC,MAAX,CAAkB;AAC7BpB,EAAAA,SAAS,EAAE;AACPqB,IAAAA,IAAI,EAAC,CADE;AAEPL,IAAAA,eAAe,EAAC;AAFT,GADkB;AAMzBN,EAAAA,UAAU,EAAC;AACXM,IAAAA,eAAe,EAAC,SADL;AAEXT,IAAAA,SAAS,EAAC;AAFC,GANc;AAU1BM,EAAAA,IAAI,EAAC;AAEJG,IAAAA,eAAe,EAAC,OAFZ;AAGJX,IAAAA,MAAM,EAAC,EAHH;AAIJO,IAAAA,QAAQ,EAAC,EAJL;AAKJL,IAAAA,SAAS,EAAC,CALN;AAMJH,IAAAA,KAAK,EAAC,GANF;AAOJE,IAAAA,UAAU,EAAC;AAPP,GAVqB;AAmB3BQ,EAAAA,IAAI,EAAC;AACHF,IAAAA,QAAQ,EAAC,EADN;AACSH,IAAAA,UAAU,EAAC,MADpB;AAEHD,IAAAA,KAAK,EAAC,OAFH;AAGHF,IAAAA,UAAU,EAAC,EAHR;AAGWC,IAAAA,SAAS,EAAC;AAHrB;AAnBsB,CAAlB,CAAf;AA6BA,eAAezI,IAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport { Text, View,StyleSheet,Image,ScrollView,ActivityIndicator,Alert,ToastAndroid } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport{ Avatar, Card, Title,Icon,Button} from 'react-native-paper';\r\nimport axios from \"react-native-axios\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\n // ICONS \r\n\r\n import { MaterialIcons } from '@expo/vector-icons';\r\n import { Fontisto } from '@expo/vector-icons';\r\n import { Zocial } from '@expo/vector-icons';\r\n import { FontAwesome5 } from '@expo/vector-icons';\r\n import { Entypo } from '@expo/vector-icons';\r\n import { Ionicons } from '@expo/vector-icons';\r\n import { FontAwesome } from '@expo/vector-icons';\r\n import { AntDesign } from '@expo/vector-icons';\r\n import { MaterialCommunityIcons } from '@expo/vector-icons';\r\n import { Redirect } from 'react-router-native';\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\n\r\n  function Task({route,navigation}) {\r\n    \r\n   // USE EFFECT\r\n   useEffect(()=>{\r\n   // updateEntry();\r\n   getloginData();\r\n    getAllTaskById(); \r\n    getDaysByMonth(cmonth) ;\r\n  },[])\r\n\r\n  //let[userid , setUserId] = React.useState()\r\n  //let[username , setUserName] = React.useState()\r\n  const[btnName , setBtnName] = React.useState('0');\r\n  const[btnColor , setBtnColor] = React.useState('0');\r\n  const[userData, setUserData] = React.useState(['']);\r\n  const[input , setInput] = React.useState();\r\n\r\n  const { id , name } = route.params;\r\n  let cday = new Date().getDay();\r\n  let cmonth = new Date().getMonth()+1; \r\n  let ctime  = new Date().toLocaleTimeString();\r\n  let cdate  = new Date().toDateString();\r\n\r\n\r\n  const getloginData= async()=>{\r\n   setUserData(JSON.parse( await  AsyncStorage.getItem(\"userData\")));\r\n  //let data = JSON.parse( await  AsyncStorage.getItem(\"userData\"))\r\n  // setUserId( data[0].id); setUserName(data[0].fullname);\r\n  }\r\n  let userid,username;\r\n  if(id) userid = id;\r\n  if(name!=0) username = name;\r\n  //let userid = id;//= userData[0].id;\r\n  //let username = userData[0].fullname;\r\n\r\n  const months =[\" \",\"January\" ,\"February\" , \" March\" ,\"April\" , \"May\" ,\"June\" ,\"July\",\"August\",\"September\",\r\n  \"October\",\"November\" ,\"December\"] \r\n\r\n  //const {EmpId} = useParams(); \r\n  const [inputText, onChangeText] = React.useState(0);\r\n\r\n  const [noEntry , setNoEntry]= React.useState(0);\r\n  \r\n  let janC=0, febC=0 ,marC=0, aprC=0,mayC=0,junC=0,julC=0,augC=0,sepC=0,octC=0,novC=0,decC=0;\r\n  const [ itsMe , setItsMe] = React.useState(false);\r\n  const [ Days , setDays] = React.useState([]);\r\n  const [ monthNo, setMonthNo] = React.useState(cmonth)\r\n  const [ confirmdel , setConfirmdel] = React.useState(false);\r\n  const [ invalidId,setInvalidId]     = React.useState();\r\n  const [ isLoader,setLoader]         = React.useState(true);\r\n  const [ isLoader2,setLoader2]         = React.useState(true);\r\n  const [ datanotfound , setDNF]      = React.useState(false)\r\n  const [ datanotfound2 , setDNF2]      = React.useState(false)\r\n  const [ attendance , setAttendance] = React.useState([]);\r\n  const [ duplicate , setDuplicate]   = React.useState([]);\r\n  const [ month , setMonth] = React.useState(cmonth);\r\n  const [ count , setcount] = React.useState();\r\n  const [ Djan , setDjan]   = React.useState();\r\n  const [ Dfeb , setDfeb]   = React.useState();\r\n  const [ Dmar , setDmar]   = React.useState();\r\n  const [ Dapr , setDapr]   = React.useState();\r\n  const [ Dmay , setDmay]   = React.useState();\r\n  const [ Djun , setDjun]   = React.useState();\r\n  const [ Djul , setDjul]   = React.useState();\r\n  const [ Daug , setDaug]   = React.useState();\r\n  const [ Dsep , setDsep]   = React.useState();\r\n  const [ Doct , setDoct]   = React.useState();\r\n  const [ Dnov , setDnov]   = React.useState();\r\n  const [ Ddec , setDdec]   = React.useState();\r\n  const RedirectTo = ()=>{\r\n\r\n  }\r\n\r\n  // ADDING TASK\r\n  const ADDTASK=()=>{\r\n    if(inputText == 0)\r\n      ToastAndroid.show(`Please type your task first !`, ToastAndroid.SHORT)\r\n    else{\r\n      let TodoData =\r\n      {\r\n           userid    : userData[0].id,\r\n           task      : inputText,\r\n           day       : cday,\r\n           month     : cmonth,\r\n           year      : '2021',\r\n           edate     : cdate,\r\n           etime     : ctime,\r\n           status    : '0'\r\n      }\r\n           axios.post(\"http://192.168.0.103:9000/api/v1/e-res/createTask\",TodoData).then(\r\n                (response)=>{\r\n                    if(response.data == 400){\r\n                          ToastAndroid.show(`Something went wrong please try later !`, ToastAndroid.SHORT)\r\n                    }\r\n                    else{\r\n                        let data = response.data\r\n                       ToastAndroid.show(`Task added successfully !`, ToastAndroid.SHORT)\r\n                       getAllTaskById(); \r\n                       getDaysByMonth(cmonth) ;\r\n                       onChangeText(\" \")\r\n\r\n                     \r\n                    }\r\n                }).\r\n                    catch((error)=>{ \r\n                    alert(error);\r\n                    console.log(error)\r\n                }) \r\n  \r\n    }\r\n  }\r\n\r\n/*\r\n  // ENTRY ALERT\r\n  const EntryAlert=()=>{\r\n      Alert.alert(\r\n        \"Hi \"+userData[0].fullname,\r\n            \"Are you in office ? \",   \r\n          [\r\n              {\r\n                  text: \"NO\",\r\n                  onPress: () => console.log(\" d Cancel presed\"),\r\n                  style: \"cancel\"\r\n              },\r\n              {\r\n                  text: \"YES\",\r\n                  onPress: () => insertDate()\r\n              },  \r\n          ],\r\n          {\r\n               cancelable: false }\r\n          );\r\n}\r\n\r\n// INSERT DATE FOR TODAY\r\nconst insertDate=()=>\r\n{\r\n  let AttendanceData =\r\n  {\r\n      userid    : userData[0].id,\r\n      username  : userData[0].fullname,\r\n      day       : cday,\r\n      month     : cmonth,\r\n      year      : '2021',\r\n      edate     : new Date().toDateString(),\r\n      etime     :new Date().toLocaleTimeString()\r\n  }\r\n   axios.post(\"http://192.168.0.103:9000/api/v1/e-res/createAttendance\",AttendanceData).then(\r\n     (response)=>{\r\n         if(response.data == 400){\r\n            ToastAndroid.show(\"something went wrong please try later !\", ToastAndroid.SHORT)\r\n         }\r\n         else{\r\n             let data = response.data;\r\n             getAttendanceById(); \r\n             getDaysByMonth(cmonth) ;\r\n           //  updateEntry();\r\n             ToastAndroid.show(\"Entry done successfully !\", ToastAndroid.SHORT)\r\n             \r\n         }\r\n     }).\r\n          catch((error)=>{ \r\n            alert(error);\r\n          console.log(error)\r\n     })          \r\n}   \r\n*/\r\n\r\n// FETCHING ALL TASK  BY ID\r\nconst getAllTaskById= ()=>{\r\n  setDNF(false);\r\n  axios.get(`http://192.168.0.103:9000/api/v1/e-res/taskById/${userid}`).then(\r\n     (response)=>{\r\n      // jan\r\n        let  tdays = response.data;//alert(JSON.stringify(tdays))\r\n      if(tdays.success == 404)\r\n      {\r\n          setDNF(true);\r\n          setLoader(false)\r\n      }\r\n      else{\r\n        setLoader(false)\r\n        tdays.map((data1 , index)=>(\r\n         (data1.month ==1)?janC++:\"\" ))\r\n         setDjan(janC)\r\n    // feb\r\n         tdays.map((data2 , index)=>(\r\n         (data2.month ==2)?febC++:\"\" ))\r\n         setDfeb(febC)\r\n    // mar\r\n         tdays.map((data2 , index)=>(\r\n         (data2.month ==3)?marC++:\"\" ))\r\n         setDmar(marC)\r\n    // apr\r\n         tdays.map((data2 , index)=>(\r\n         (data2.month ==4)?aprC++:\"\" ))\r\n         setDapr(aprC)\r\n    // may\r\n         tdays.map((data2 , index)=>(\r\n         (data2.month ==5)?mayC++:\"\" ))\r\n         setDmay(mayC)\r\n    // jun\r\n         tdays.map((data2 , index)=>(\r\n         (data2.month ==6)?junC++:\"\" ))\r\n         setDjun(junC)\r\n    // jul\r\n         tdays.map((data2 , index)=>(\r\n         (data2.month ==7)?julC++:\"\" ))\r\n         setDjul(julC)\r\n    // aug\r\n         tdays.map((data2 , index)=>(\r\n         (data2.month ==8)?augC++:\"\" ))\r\n         setDaug(augC)\r\n    // sep\r\n         tdays.map((data2 , index)=>(\r\n         (data2.month ==9)?sepC++:\"\" ))\r\n         setDsep(sepC)\r\n    // oct\r\n         tdays.map((data2 , index)=>(\r\n         (data2.month ==10)?octC++:\"\" ))\r\n         setDoct(octC)\r\n    // noc\r\n         tdays.map((data2 , index)=>(\r\n         (data2.month ==11)?novC++:\"\" ))\r\n         setDnov(novC)\r\n    // dec\r\n         tdays.map((data2 , index)=>(\r\n         (data2.month ==12)?decC++:\"\" ))\r\n         setDdec(decC)       \r\n         }\r\n         }).\r\n          catch((error)=>{ \r\n    //  alert(error)\r\n          console.log(error)\r\n         setLoader(false)\r\n         }\r\n     ) \r\n}\r\n\r\n\r\n  \r\n/* // FETCHING ALL TASK   IN  EACH  MONTHS\r\n const getAllTaskById = ()=>{\r\n  axios.get(\"http://192.168.0.103:9000/api/v1/e-res/taskById/\"+userid).then(\r\n       (response)=>{\r\n      // jan\r\n          let  tdays = response.data;\r\n         if(tdays.success != 404){\r\n         setTotaltask(tdays)\r\n      // setTotaltask(response.data);\r\n          tdays.map((data1 , index)=>(\r\n           (data1.month ==1)?janC++:\"\" ))\r\n           setDjan(janC)\r\n      // feb\r\n           tdays.map((data2 , index)=>(\r\n           (data2.month ==2)?febC++:\"\" ))\r\n           setDfeb(febC)\r\n      // mar\r\n           tdays.map((data2 , index)=>(\r\n           (data2.month ==3)?marC++:\"\" ))\r\n           setDmar(marC)\r\n      // apr\r\n           tdays.map((data2 , index)=>(\r\n           (data2.month ==4)?aprC++:\"\" ))\r\n           setDapr(aprC)\r\n      // may\r\n           tdays.map((data2 , index)=>(\r\n           (data2.month ==5)?mayC++:\"\" ))\r\n           setDmay(mayC)\r\n      // jun\r\n           tdays.map((data2 , index)=>(\r\n           (data2.month ==6)?junC++:\"\" ))\r\n           setDjun(junC)\r\n      // jul\r\n           tdays.map((data2 , index)=>(\r\n           (data2.month ==7)?julC++:\"\" ))\r\n           setDjul(julC)\r\n      // aug\r\n           tdays.map((data2 , index)=>(\r\n           (data2.month ==8)?augC++:\"\" ))\r\n           setDaug(augC)\r\n      // sep\r\n           tdays.map((data2 , index)=>(\r\n           (data2.month ==9)?sepC++:\"\" ))\r\n           setDsep(sepC)\r\n      // oct\r\n           tdays.map((data2 , index)=>(\r\n           (data2.month ==10)?octC++:\"\" ))\r\n           setDoct(octC)\r\n      // noc\r\n           tdays.map((data2 , index)=>(\r\n           (data2.month ==11)?novC++:\"\" ))\r\n           setDnov(novC)\r\n      // dec\r\n           tdays.map((data2 , index)=>(\r\n           (data2.month ==12)?decC++:\"\" ))\r\n           setDdec(decC)\r\n       }\r\n          \r\n       })         \r\n }*/\r\n // GET ALL DAYS BY A MONTH\r\n  const getDaysByMonth = (month)=>{\r\n    setMonthNo(month)\r\n    setLoader2(true)\r\n    let dataobj=\r\n    {\r\n        userid    : userid,\r\n        month     : month\r\n    }\r\n    axios.post(\"http://192.168.0.103:9000/api/v1/e-res/getDuplicateDayById\",dataobj).then(\r\n    (response)=>{\r\n      if(response.data.status == 404)\r\n      {\r\n         setDNF2(true); \r\n         setLoader2(false)\r\n      }\r\n      else{\r\n        let  days = response.data;\r\n        setAttendance(days); \r\n        setLoader2(false)\r\n        setDNF2(false); \r\n      }\r\n    }).\r\n    catch((error)=>{ \r\n         alert(error);\r\n         console.log(error)\r\n         setLoader2(false)\r\n    })   \r\n  }  \r\n   /*      \r\n // update entry\r\n  const updateEntry=()=>{\r\n  let dataObj =\r\n  {\r\n      userid    : 76,//userData[0].id,\r\n      edate     : new Date().toDateString()\r\n  }\r\n  axios.post(\"http://192.168.0.103:9000/api/v1/e-res/dateToday\",dataObj).then(\r\n    (response)=>{\r\n        let data = response.data;\r\n        if(data.status == 404){\r\n          if(userid == userData[0].id)\r\n          {\r\n            EntryAlert();\r\n          }\r\n          else{\r\n            alert(`SORRY ! you are visiting attendance sheet of ${username}`)\r\n          }\r\n        }else{\r\n          alert(`Hi ${userData[0].fullname} we found you are in office already!`)\r\n        } \r\n     })   \r\n}\r\n\r\n// DELETE ATTN\r\nconst deleteAttn = (id)=>{\r\n  axios.delete(\"http://192.168.0.103:9000/api/v1/e-res/deleteAttendanceById/\"+id).then(\r\n      (response)=>{\r\n          if(response.data == 400){\r\n            ToastAndroid.show(\"Something went wrong try later !\", ToastAndroid.SHORT)\r\n          }\r\n          else{\r\n                ToastAndroid.show(\"Deleted Successfully !\", ToastAndroid.SHORT)\r\n             //   updateEntry();\r\n                getAttendanceById(); \r\n                getDaysByMonth(cmonth) ;\r\n            }\r\n        }).\r\n           catch((error)=>{ \r\n           alert(error);\r\n           console.log(error)  \r\n        }\r\n       )  \r\n}\r\n\r\n// CONFIRM DELETE\r\nconst confirmDelAttn=(id , edate)=>\r\n{\r\n\r\n  if(userData[0].id == userid)\r\n  {\r\n        Alert.alert(\r\n          \"Hi \"+userData[0].fullname,\r\n          \"Are you sure '\"+ edate +\"' will remove  from your working days ? \",   \r\n        [\r\n            {\r\n                text: \"NO\",\r\n                onPress: () => console.log(\" d Cancel presed\"),\r\n                style: \"cancel\"\r\n            },\r\n            {\r\n                text: \"YES\",\r\n                onPress: () => deleteAttn(id)\r\n            },  \r\n        ],\r\n        {\r\n            cancelable: false }\r\n        );\r\n  }else{\r\n    alert(\"SORRY YOU ARE NOT AUTHORISED\")\r\n  }\r\n}*/\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n    {/*LOGO BAR */}\r\n    <View style={{flexDirection:'row'}}>\r\n      <Image style={styles.fadingText} source = {require('../assets/Images/officeLogo.png')}\r\n          style={{ width:40, height:40 , marginLeft:9,marginTop:5}}\r\n      /> \r\n      <Text style={{color:'white',fontWeight:'bold',marginLeft:150,marginTop:15}}>{username}</Text>\r\n     </View>\r\n     \r\n\r\n     {/* MAIN BODY */}\r\n     <ScrollView style={styles.scrollview}>\r\n      {/* SPINNER LOADER */}\r\n     {(isLoader)? \r\n         <View>\r\n                <ActivityIndicator  style={{marginTop:240}} size=\"large\" color=\"lightseagreen\" />\r\n                <Text style={{marginLeft:145,marginTop:10}}>Please wait...</Text>\r\n         </View>  \r\n        :  \r\n        <View>\r\n         {(datanotfound)? \r\n           <View style={{alignItems:'center',marginTop:200}}>\r\n           <Fontisto name=\"folder\" size={35} color=\"grey\" />\r\n           <Text style={{fontSize:20,fontWeight:'bold',color:'grey'}}>EMPTY TASK SHEET </Text>\r\n           </View>\r\n           :\r\n           <View>\r\n                <View style={{flexDirection:'row',marginTop:4}}>\r\n                      <Card style={styles.card} onPress={()=>{getDaysByMonth(1)}}>\r\n                            <Text style={styles.text}>\r\n                              JANUARY  [ {Djan} ]\r\n                            </Text>    \r\n                      </Card>\r\n\r\n                      <Card style={styles.card}  onPress={()=>{getDaysByMonth(2)}}>\r\n                          <Text style={styles.text}>\r\n                              FEBRUARY  [ {Dfeb} ]\r\n                            </Text>  \r\n                      </Card>\r\n                      <Card style={styles.card}  onPress={()=>{getDaysByMonth(3)}}>\r\n                          <Text style={styles.text}>\r\n                              MARCH  [ {Dmar} ]\r\n                            </Text>    \r\n                      </Card>\r\n                </View>\r\n\r\n                <View style={{flexDirection:'row',marginTop:4}}>\r\n                      <Card style={styles.card} onPress={()=>{getDaysByMonth(4)}}>\r\n                            <Text style={styles.text}>\r\n                              APRIL  [ {Dapr} ]\r\n                            </Text> \r\n                      </Card>\r\n\r\n                      <Card style={styles.card}  onPress={()=>{getDaysByMonth(5)}}>\r\n                          <Text style={styles.text}>\r\n                              MAY  [ {Dmay} ]\r\n                            </Text>  \r\n                      </Card>\r\n                      <Card style={styles.card}  onPress={()=>{getDaysByMonth(6)}}>\r\n                          <Text style={styles.text}>\r\n                              JUNE  [ {Djun} ]\r\n                            </Text>    \r\n                      </Card>\r\n               </View>\r\n                <View style={{flexDirection:'row',marginTop:4}}>\r\n                        <Card style={styles.card} onPress={()=>{getDaysByMonth(7)}}>\r\n                              <Text style={styles.text}>\r\n                                JULY  [ {Djul} ]\r\n                              </Text> \r\n                        </Card>\r\n\r\n                        <Card style={styles.card}  onPress={()=>{getDaysByMonth(8)}}>\r\n                            <Text style={styles.text}>\r\n                                AUGUST  [ {Daug} ]\r\n                              </Text>  \r\n                        </Card>\r\n                        <Card style={styles.card}  onPress={()=>{getDaysByMonth(9)}}>\r\n                            <Text style={styles.text}>\r\n                                SEPTEMBER  [ {Dsep} ]\r\n                              </Text>    \r\n                        </Card>\r\n                </View>\r\n                  <View style={{flexDirection:'row',marginTop:4}}>\r\n\r\n                          <Card style={styles.card} onPress={()=>{getDaysByMonth(10)}}>\r\n                                <Text style={styles.text}>\r\n                                  OCTOBER  [ {Doct} ]\r\n                                </Text> \r\n                          </Card>\r\n\r\n                          <Card style={styles.card}  onPress={()=>{getDaysByMonth(11)}}>\r\n                              <Text style={styles.text}>\r\n                                  NOVENBER  [  {Dnov} ]\r\n                                </Text>  \r\n                          </Card>\r\n                          <Card style={styles.card}  onPress={()=>{getDaysByMonth(12)}}>\r\n                              <Text style={styles.text}>\r\n                                  DECEMBER  [ {Ddec} ]\r\n                                </Text>    \r\n                          </Card>\r\n                  </View>\r\n                <Text style={{color:'white',fontSize:18,marginTop:8,fontWeight:'bold',paddingLeft:60,backgroundColor:'black'}}>\r\n                    TASK ADDED ON   : {months[monthNo]}\r\n                 </Text>\r\n\r\n      {/* SPINNER LOADER */}\r\n      {(isLoader2)? \r\n         <View>\r\n              <ActivityIndicator  style={{marginTop:150}} size=\"large\" color=\"lightseagreen\" />\r\n              <Text style={{marginLeft:145,marginTop:10}}>Please wait...</Text>\r\n         </View>  \r\n        : <View>\r\n           {(datanotfound2)? \r\n           <View style={{alignItems:'center',marginTop:140}}>\r\n           <Fontisto name=\"folder\" size={35} color=\"grey\" />\r\n           <Text style={{fontSize:20,fontWeight:'bold',color:'grey'}}>ZERO</Text>\r\n           </View>\r\n           : <View>\r\n                 {/* DAYS IN A WEEK */}\r\n                 {\r\n                   attendance.map((data)=>(\r\n                   <View>\r\n                      <Card style={{height:35,marginTop:10}} >\r\n                        <View   style={{flexDirection:'row'}}>\r\n                        <Text   style={{marginLeft:35,paddingTop:7,color:'black',fontSize:14}}> {data.edate}</Text>\r\n                        <Card style={{marginLeft:150, height:35,width:35,backgroundColor:'white'}}>\r\n                            <Button style={{marginLeft:-12}} onPress={()=>{navigation.navigate('ViewTask',{edate:data.edate, userid:userid, username:username})}}>\r\n                               <MaterialCommunityIcons name=\"file-eye\" size={24} color=\"lightseagreen\" />\r\n                            </Button> \r\n                          </Card>\r\n                        </View>\r\n                      </Card>\r\n                   </View>\r\n\r\n                   ))\r\n                 }\r\n            </View>}\r\n        </View> }\r\n         </View>}\r\n       </View>}\r\n  </ScrollView>\r\n\r\n  {(userid == userData[0].id)?\r\n    <View style={{flexDirection:'row',height:50,backgroundColor:'white',alignItems:'center'}}>\r\n    <TextInput style={{paddingLeft:15,width:315, height:50}}placeholder=\"add your task here...\" value={inputText}  onChangeText={text => onChangeText(text)}></TextInput>\r\n       <Button style={{marginLeft:-15}}  onPress={()=>{ADDTASK()}}>\r\n        <MaterialIcons  name=\"add-circle\" size={40} color=\"lightseagreen\"  />\r\n       </Button>\r\n    </View>\r\n    :<View></View>\r\n  }\r\n</View>\r\n  );\r\n}\r\n   \r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex:1,\r\n        backgroundColor:\"black\",\r\n        //paddingTop: StatusBar.currentHeight,\r\n       },\r\n        scrollview:{ \r\n        backgroundColor:'#EBEEEE',\r\n        marginTop:15,\r\n       },\r\n       card:{\r\n       // flex:1,\r\n        backgroundColor:'white',\r\n        height:30,\r\n        fontSize:14,\r\n        marginTop:3,\r\n        width:115,\r\n        marginLeft:3.6,\r\n      },\r\n      text:{\r\n        fontSize:12,fontWeight:'bold',\r\n        color:'black',\r\n        marginLeft:10,marginTop:7\r\n      },\r\n\r\n    \r\n    });\r\n    \r\n\r\nexport default Task;"]},"metadata":{},"sourceType":"module"}