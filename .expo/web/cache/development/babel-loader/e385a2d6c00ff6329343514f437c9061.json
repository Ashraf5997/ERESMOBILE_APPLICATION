{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Desktop\\\\doc\\\\react_native_app\\\\ERES_MOBILE_APP\\\\Components\\\\Login.js\";\n\nimport React, { useEffect, useRef } from \"react\";\nimport axios from \"react-native-axios\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { Paragraph } from \"react-native-web/dist/index\";\nimport { Headline } from \"react-native-web/dist/index\";\nimport { Appbar } from \"react-native-web/dist/index\";\nimport { Portal } from \"react-native-web/dist/index\";\nimport { Provider } from \"react-native-web/dist/index\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { Avatar, Button, Card, Title } from 'react-native-paper';\nimport AnimateLoadingButton from 'react-native-animate-loading-button';\nimport { color } from \"react-native-reanimated\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  useEffect(function () {\n    LogBox.ignoreLogs(['Animated: `useNativeDriver`']);\n  }, []);\n\n  var LeftContent = function LeftContent(props) {\n    return React.createElement(Avatar.Icon, _extends({}, props, {\n      icon: \"folder\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var loadingButton;\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      modalVisible = _React$useState6[0],\n      setModalVisible = _React$useState6[1];\n\n  var GoToForgotPassword = function GoToForgotPassword() {\n    navigation.navigate('ForgotPassword');\n  };\n\n  var containerStyle = {\n    backgroundColor: 'white',\n    padding: 20\n  };\n\n  var hitLogin = function hitLogin() {\n    var Values;\n    return _regeneratorRuntime.async(function hitLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (email && password) {\n              loadingButton.showLoading(true);\n              Values = {\n                email: email,\n                password: password\n              };\n              axios.post(\"http://192.168.0.103:9000/api/v1/e-res/userAuthentication\", Values).then(function (response) {\n                if (response.data == 400) {\n                  loadingButton.showLoading(false);\n                  alert(\"INVALID CREDENTIALS\");\n                } else {\n                  var data = response.data;\n                  var userid = data[0].id;\n                  loadingButton.showLoading(false);\n                  setAsyncStorage(data, userid);\n                }\n              }).catch(function (error) {\n                alert(error);\n                console.log(error);\n                loadingButton.showLoading(false);\n              });\n            } else {\n              loadingButton.showLoading(false);\n              ToastAndroid.show(\"Please provide your credentials !\", ToastAndroid.SHORT);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setAsyncStorage = function setAsyncStorage(data, userid) {\n    return _regeneratorRuntime.async(function setAsyncStorage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userData', JSON.stringify(data)));\n\n          case 2:\n            navigation.replace('Index');\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var login1 = function login1() {\n    var obj, values;\n    return _regeneratorRuntime.async(function login1$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(email && password)) {\n              _context3.next = 10;\n              break;\n            }\n\n            obj = {\n              name: \"ashrafvghfghfh\",\n              age: '24'\n            };\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"statusCode\", JSON.stringify(obj)));\n\n          case 4:\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"statusCode\"));\n\n          case 6:\n            values = _context3.sent;\n            alert(JSON.stringify(values));\n            _context3.next = 11;\n            break;\n\n          case 10:\n            ToastAndroid.show(\"Please provide your credentials !\", ToastAndroid.SHORT);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    style: styles.fadingText,\n    source: require(\"../assets/Images/officeLogo.png\"),\n    style: {\n      width: 60,\n      height: 60,\n      marginLeft: 9,\n      marginTop: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    style: styles.ERES,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, \"Employees Register Of\"), React.createElement(Text, {\n    style: styles.ERES,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, \" Ecommplify Solution\"), React.createElement(Card, {\n    style: styles.picBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, React.createElement(Card.Cover, {\n    style: styles.picBody,\n    source: require(\"../assets/Images/pic11.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.loginBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'black',\n      marginTop: -20,\n      fontSize: 20,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"Login\"), React.createElement(Text, {\n    style: {\n      color: 'black',\n      marginTop: -20,\n      marginLeft: 80,\n      fontSize: 10,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      GoToForgotPassword();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Forgot Password ?\"))), React.createElement(TextInput, {\n    placeholder: \"Enter Email\",\n    style: styles.inputText,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    value: email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 6\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Enter Password\",\n    secureTextEntry: true,\n    style: styles.inputText,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    value: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }), React.createElement(AnimateLoadingButton, {\n    ref: function ref(c) {\n      return loadingButton = c;\n    },\n    height: 40,\n    width: 200,\n    title: \"login\",\n    titleFontSize: 20,\n    titleColor: \"rgb(255,255,255)\",\n    backgroundColor: \"black\",\n    borderRadius: 5,\n    onPress: function onPress() {\n      hitLogin();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 1\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    paddingTop: StatusBar.currentHeight\n  },\n  ERES: {\n    fontSize: 20,\n    color: '#61BFB2',\n    fontWeight: 'bold',\n    marginLeft: 15,\n    textAlign: 'center'\n  },\n  picBody: {\n    flex: 4,\n    marginTop: 5,\n    backgroundColor: 'black',\n    borderBottomRightRadius: 0,\n    borderTopLeftRadius: 150\n  },\n  loginBody: {\n    flex: 1,\n    backgroundColor: '#61BFB2',\n    paddingHorizontal: 50,\n    paddingVertical: 30,\n    borderBottomRightRadius: 150,\n    overflow: 'scroll'\n  },\n  inputText: {\n    height: 40,\n    borderColor: '#61BFB2',\n    backgroundColor: 'white',\n    color: 'black',\n    borderWidth: 1,\n    width: 250,\n    textAlign: 'center',\n    borderBottomRightRadius: 200,\n    borderBottomLeftRadius: 200,\n    borderRadius: 80,\n    marginTop: 6\n  }\n});\nexport default Login;","map":{"version":3,"sources":["E:/Desktop/doc/react_native_app/ERES_MOBILE_APP/Components/Login.js"],"names":["React","useEffect","useRef","axios","Paragraph","Headline","Appbar","Portal","Provider","LogBox","AsyncStorage","Avatar","Button","Card","Title","AnimateLoadingButton","color","Login","navigation","ignoreLogs","LeftContent","props","useState","email","setEmail","password","setPassword","loadingButton","modalVisible","setModalVisible","GoToForgotPassword","navigate","containerStyle","backgroundColor","padding","hitLogin","showLoading","Values","post","then","response","data","alert","userid","id","setAsyncStorage","catch","error","console","log","ToastAndroid","show","SHORT","setItem","JSON","stringify","replace","login1","obj","name","age","getItem","values","styles","container","fadingText","require","width","height","marginLeft","marginTop","ERES","picBody","loginBody","flexDirection","fontSize","fontWeight","inputText","c","StyleSheet","create","flex","paddingTop","StatusBar","currentHeight","textAlign","borderBottomRightRadius","borderTopLeftRadius","paddingHorizontal","paddingVertical","overflow","borderColor","borderWidth","borderBottomLeftRadius","borderRadius"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect ,useRef } from \"react\";\r\nimport axios from \"react-native-axios\";\r\n//import AsyncStorage from 'react-native';\r\nimport {\r\n       View, StyleSheet,StatusBar, Alert ,Pressable,ToastAndroid,\r\n       Paragraph,Headline,Appbar, Portal, Provider,Modal,Text,Image,ScrollView,TextInput,LogBox,\r\n} from \"react-native\";\r\n//import {AsyncStorage} from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport{ \r\n      Avatar, Button, Card, Title,\r\n\r\n } from 'react-native-paper';\r\n\r\n import AnimateLoadingButton from 'react-native-animate-loading-button';\r\nimport { color } from \"react-native-reanimated\";\r\n\r\n // MAIN FUNCTION START\r\n  const  Login = ({navigation}) => {\r\n    useEffect(() => {\r\n      LogBox.ignoreLogs(['Animated: `useNativeDriver`']);\r\n  }, [])\r\n  const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\r\n  const [email, setEmail] = React.useState();\r\n  const [password, setPassword] = React.useState();\r\n  let loadingButton;\r\n\r\n// MODAL VARIABLES\r\nconst [modalVisible, setModalVisible] = React.useState(false);\r\nconst GoToForgotPassword = () =>{ \r\n  navigation.navigate('ForgotPassword');\r\n }\r\n  const containerStyle = {backgroundColor: 'white', padding: 20};\r\n\r\n// LOGIN FUNCTION\r\n const hitLogin=async()=>{\r\n   // navigation.navigate('Index');\r\n    if(email && password){\r\n      loadingButton.showLoading(true);\r\n\r\n      let  Values={\r\n        email:email,\r\n        password:password\r\n       }\r\n    \r\n      axios.post(\"http://192.168.0.103:9000/api/v1/e-res/userAuthentication\",Values).then(\r\n      (response)=>{\r\n      if(response.data == 400){\r\n         loadingButton.showLoading(false);\r\n             alert(\"INVALID CREDENTIALS\")\r\n      }\r\n      else{\r\n                let data = response.data;\r\n                let userid = data[0].id;\r\n         loadingButton.showLoading(false);\r\n         setAsyncStorage(data,userid)\r\n\r\n       }\r\n        }).\r\n           catch((error)=>{ \r\n             alert(error);\r\n             console.log(error)\r\n             loadingButton.showLoading(false)\r\n        })             \r\n    }\r\n    else{\r\n      loadingButton.showLoading(false);\r\n      ToastAndroid.show(\"Please provide your credentials !\", ToastAndroid.SHORT)\r\n    }\r\n }\r\n\r\n const setAsyncStorage=async(data,userid)=>{\r\n  await AsyncStorage.setItem('userData',JSON.stringify(data));\r\n  //let userData= JSON.parse(await AsyncStorage.getItem('data'));\r\n // alert(userData[0].fullname)\r\n  navigation.replace('Index');\r\n\r\n\r\n }\r\n\r\nconst login1= async()=>{\r\n    if(email && password){\r\n    //try{\r\n      /* let response = await fetch(\"http://192.168.0.103:9000/api/v1/e-res/userAuthentication\",{\r\n         method :'POST',\r\n         headers:{\r\n           'Accept':'application/json',\r\n           'Content-Type':'application/json'\r\n         },\r\n         body:JSON.stringify({\r\n            session:{\r\n              email:email,\r\n              password:password\r\n            }\r\n         })\r\n         });*/\r\n\r\n\r\n         let obj={\r\n           name:\"ashrafvghfghfh\",\r\n           age:'24'\r\n         }\r\n         await AsyncStorage.setItem(\"statusCode\",JSON.stringify(obj));\r\n         let values =  await AsyncStorage.getItem(\"statusCode\");\r\n         alert(JSON.stringify(values))\r\n         // let datas = response.data;\r\n         // let res = await response.json();//alert(JSON.stringify(response));\r\n   /*   }catch(error){\r\n        alert(\"err\"+error)\r\n      }*/\r\n\r\n    }else{\r\n      ToastAndroid.show(\"Please provide your credentials !\", ToastAndroid.SHORT)\r\n    }\r\n  }\r\n  return (\r\n\r\n  <View style={styles.container}>  \r\n\r\n    <Image style={styles.fadingText} source = {require('../assets/Images/officeLogo.png')}\r\n         style={{ width:60, height:60 , marginLeft:9,marginTop:5}}\r\n    /> \r\n\r\n    <Text style={styles.ERES}>Employees Register Of</Text>\r\n    <Text style={styles.ERES}> Ecommplify Solution</Text>\r\n\r\n    <Card style={styles.picBody}>\r\n        <Card.Cover style={styles.picBody} source = {require('../assets/Images/pic11.png')}  />\r\n    </Card>\r\n\r\n    <ScrollView>\r\n      <View style={styles.loginBody} >\r\n        <View style={{flexDirection:'row',}}>\r\n        <Text style={{color:'black',marginTop:-20, fontSize:20,fontWeight:'bold'}}>Login</Text>\r\n        <Text style={{color:'black',marginTop:-20,marginLeft:80, fontSize:10,fontWeight:'bold'}}>\r\n        <Button onPress={()=>{GoToForgotPassword()}} >\r\n          Forgot Password ?\r\n       </Button>\r\n        </Text>\r\n\r\n        </View>\r\n  \r\n{/*  EMAIL INPUT*/ }\r\n     <TextInput\r\n          placeholder=\"Enter Email\"\r\n          style={styles.inputText}\r\n          autoCapitalize=\"none\"\r\n          onChangeText={email => setEmail(email)}\r\n          //onChangeText={handleChanges()}\r\n          value={email}\r\n    />\r\n {/*  PASSWORD INPUT*/ }\r\n    <TextInput \r\n      placeholder=\"Enter Password\"\r\n      secureTextEntry={true}\r\n      style={styles.inputText}\r\n     // onChangeText={handleChanges()}\r\n     onChangeText={password => setPassword(password)}\r\n      value={password}\r\n    />\r\n {/* hitLogin Buton*/}\r\n<AnimateLoadingButton  \r\n          ref={c => (loadingButton = c)}\r\n          height={40}\r\n          width={200}\r\n          title=\"login\"\r\n          titleFontSize={20}\r\n          titleColor=\"rgb(255,255,255)\"\r\n          backgroundColor=\"black\"\r\n          borderRadius={5}\r\n          onPress={()=>{hitLogin()}}\r\n  />\r\n     </View>\r\n     </ScrollView> \r\n  </View>\r\n  );\r\n  }\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex:1,\r\n    backgroundColor:\"black\",\r\n    paddingTop: StatusBar.currentHeight,\r\n  },\r\n\r\n  ERES:{\r\n      fontSize:20,\r\n      color:'#61BFB2',\r\n      fontWeight:'bold',\r\n      marginLeft:15,\r\n      textAlign:'center', \r\n  },\r\n  picBody:{\r\n    flex:4,\r\n    marginTop:5,\r\n    backgroundColor:'black',\r\n    borderBottomRightRadius:0,\r\n    borderTopLeftRadius:150,\r\n  },\r\n    loginBody:{\r\n    flex:1,\r\n    backgroundColor:'#61BFB2',\r\n    //alignItems:'center',\r\n    paddingHorizontal:50,\r\n    paddingVertical:30,\r\n    borderBottomRightRadius:150,\r\n    overflow:'scroll',\r\n  },\r\n  inputText:{\r\n    height: 40, borderColor: '#61BFB2',backgroundColor:'white',\r\n    color:'black', borderWidth:1,width:250,textAlign:'center',\r\n    borderBottomRightRadius:200,\r\n    borderBottomLeftRadius:200,\r\n    borderRadius:80,marginTop:6\r\n  },\r\n\r\n});\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}