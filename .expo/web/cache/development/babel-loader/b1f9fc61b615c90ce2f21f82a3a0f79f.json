{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Desktop\\\\doc\\\\react_native_app\\\\ERES_MOBILE_APP\\\\node_modules\\\\react-native-animate-loading-button\\\\src\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\n\nvar Component = function (_React$PureComponent) {\n  _inherits(Component, _React$PureComponent);\n\n  var _super = _createSuper(Component);\n\n  function Component(props) {\n    var _this;\n\n    _classCallCheck(this, Component);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      showLoading: false\n    };\n    _this.loadingValue = {\n      width: new Animated.Value(props.width),\n      borderRadius: new Animated.Value(props.borderRadius),\n      opacity: new Animated.Value(1)\n    };\n    return _this;\n  }\n\n  _createClass(Component, [{\n    key: \"showLoading\",\n    value: function showLoading(_showLoading) {\n      var _this2 = this;\n\n      if (_showLoading) {\n        this._loadingAnimation(this.props.width, this.props.height, this.props.borderRadius, this.props.height / 2, 1, 0);\n\n        this.setState({\n          showLoading: _showLoading\n        });\n      } else {\n        setTimeout(function () {\n          _this2._loadingAnimation(_this2.props.height, _this2.props.width, _this2.props.height / 2, _this2.props.borderRadius, 0, 1);\n\n          _this2.setState({\n            showLoading: _showLoading\n          });\n        }, 1000);\n      }\n    }\n  }, {\n    key: \"_loadingAnimation\",\n    value: function _loadingAnimation(widthStart, widthEnd, borderRadiusStart, borderRadiusEnd, opacityStart, opacityEnd) {\n      if (this.loadingValue.width._value !== widthEnd) {\n        this.loadingValue.width.setValue(widthStart);\n        this.loadingValue.opacity.setValue(opacityStart);\n        this.loadingValue.borderRadius.setValue(borderRadiusStart);\n        Animated.timing(this.loadingValue.width, {\n          toValue: widthEnd,\n          duration: 400\n        }).start();\n        Animated.timing(this.loadingValue.borderRadius, {\n          toValue: borderRadiusEnd,\n          duration: 400\n        }).start();\n        Animated.timing(this.loadingValue.opacity, {\n          toValue: opacityEnd,\n          duration: 300\n        }).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: !this.state.showLoading ? this.props.onPress : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.containerButton, {\n          width: this.loadingValue.width,\n          height: this.props.height,\n          backgroundColor: this.props.backgroundColor,\n          borderWidth: this.props.borderWidth,\n          borderRadius: this.loadingValue.borderRadius\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, this.state.showLoading ? this._renderIndicator() : this._renderTitle())));\n    }\n  }, {\n    key: \"_renderTitle\",\n    value: function _renderTitle() {\n      return React.createElement(Animated.Text, {\n        style: [styles.buttonText, {\n          opacity: this.loadingValue.opacity,\n          color: this.props.titleColor,\n          fontFamily: this.props.titleFontFamily,\n          fontSize: this.props.titleFontSize\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, this.props.title);\n    }\n  }, {\n    key: \"_renderIndicator\",\n    value: function _renderIndicator() {\n      return React.createElement(ActivityIndicator, {\n        color: this.props.activityIndicatorColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return Component;\n}(React.PureComponent);\n\nComponent.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  titleColor: PropTypes.string,\n  titleFontFamily: PropTypes.string,\n  titleFontSize: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  borderWidth: PropTypes.number,\n  borderRadius: PropTypes.number,\n  activityIndicatorColor: PropTypes.string,\n  onPress: PropTypes.func.isRequired\n};\nComponent.defaultProps = {\n  title: 'Button',\n  titleColor: 'white',\n  backgroundColor: 'gray',\n  activityIndicatorColor: 'white',\n  borderRadius: 0\n};\nexport { Component as default };\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  containerButton: {\n    justifyContent: 'center'\n  },\n  buttonText: {\n    backgroundColor: 'transparent',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["E:/Desktop/doc/react_native_app/ERES_MOBILE_APP/node_modules/react-native-animate-loading-button/src/index.js"],"names":["React","PropTypes","Component","props","state","showLoading","loadingValue","width","Animated","Value","borderRadius","opacity","_loadingAnimation","height","setState","setTimeout","widthStart","widthEnd","borderRadiusStart","borderRadiusEnd","opacityStart","opacityEnd","_value","setValue","timing","toValue","duration","start","styles","container","onPress","containerButton","backgroundColor","borderWidth","_renderIndicator","_renderTitle","buttonText","color","titleColor","fontFamily","titleFontFamily","fontSize","titleFontSize","title","activityIndicatorColor","PureComponent","propTypes","number","isRequired","string","func","defaultProps","StyleSheet","create","alignItems","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, TouchableWithoutFeedback, Animated, ActivityIndicator, View, Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nexport default class Component extends React.PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    titleColor: PropTypes.string,\n    titleFontFamily: PropTypes.string,\n    titleFontSize: PropTypes.number,\n    backgroundColor: PropTypes.string,\n    borderWidth: PropTypes.number,\n    borderRadius: PropTypes.number,\n    activityIndicatorColor: PropTypes.string,\n    onPress: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    title: 'Button',\n    titleColor: 'white',\n    backgroundColor: 'gray',\n    activityIndicatorColor: 'white',\n    borderRadius: 0\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showLoading: false\n    };\n\n    this.loadingValue = {\n      width: new Animated.Value(props.width),\n      borderRadius: new Animated.Value(props.borderRadius),\n      opacity: new Animated.Value(1)\n    };\n  }\n\n  showLoading(showLoading) {\n    if (showLoading) {\n      this._loadingAnimation(this.props.width, this.props.height, this.props.borderRadius, this.props.height / 2, 1, 0);\n      this.setState({ showLoading: showLoading });\n    } else {\n      setTimeout(() => {\n        this._loadingAnimation(this.props.height, this.props.width, this.props.height / 2, this.props.borderRadius, 0, 1);\n        this.setState({ showLoading: showLoading });\n      }, 1000);\n    }\n  }\n\n  _loadingAnimation(widthStart, widthEnd, borderRadiusStart, borderRadiusEnd, opacityStart, opacityEnd) {\n    if (this.loadingValue.width._value !== widthEnd) {\n      this.loadingValue.width.setValue(widthStart);\n      this.loadingValue.opacity.setValue(opacityStart);\n      this.loadingValue.borderRadius.setValue(borderRadiusStart);\n\n      Animated.timing(this.loadingValue.width, {\n        toValue: widthEnd,\n        duration: 400\n      }).start();\n\n      Animated.timing(this.loadingValue.borderRadius, {\n        toValue: borderRadiusEnd,\n        duration: 400\n      }).start();\n\n      Animated.timing(this.loadingValue.opacity, {\n        toValue: opacityEnd,\n        duration: 300\n      }).start();\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <TouchableWithoutFeedback onPress={!this.state.showLoading ? this.props.onPress : null}>\n          <Animated.View\n            style={[\n              styles.containerButton,\n              {\n                width: this.loadingValue.width,\n                height: this.props.height,\n                backgroundColor: this.props.backgroundColor,\n                borderWidth: this.props.borderWidth,\n                borderRadius: this.loadingValue.borderRadius\n              }\n            ]}\n          >\n            {this.state.showLoading ? this._renderIndicator() : this._renderTitle()}\n          </Animated.View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  }\n\n  _renderTitle() {\n    return (\n      <Animated.Text\n        style={[\n          styles.buttonText,\n          {\n            opacity: this.loadingValue.opacity,\n            color: this.props.titleColor,\n            fontFamily: this.props.titleFontFamily,\n            fontSize: this.props.titleFontSize\n          }\n        ]}\n      >\n        {this.props.title}\n      </Animated.Text>\n    );\n  }\n\n  _renderIndicator() {\n    return <ActivityIndicator color={this.props.activityIndicatorColor} />;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  containerButton: {\n    justifyContent: 'center'\n  },\n  buttonText: {\n    backgroundColor: 'transparent',\n    textAlign: 'center'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}